[package]
name = "espoxi3"
version = "0.27.0"
authors = ["ivmarkov"]
edition = "2018"
categories = ["embedded", "hardware-support"]
keywords = ["embedded", "svc", "idf", "esp-idf", "esp32"]
description = "A demo binary crate for the ESP32 and ESP-IDF, which connects to WiFi, Ethernet, drives a small HTTP server and draws on a LED screen"
# repository = "https://github.com/ivmarkov/espoxi3"
license = "MIT OR Apache-2.0"
readme = "README.md"

[patch.crates-io]
smol = { git = "https://github.com/esp-rs-compat/smol" }
polling = { git = "https://github.com/esp-rs-compat/polling" }
socket2 = { git = "https://github.com/esp-rs-compat/socket2" }
getrandom = { version = "0.2", git = "https://github.com/esp-rs-compat/getrandom.git" }
#getrandom1 = { version = "0.1", git = "https://github.com/esp-rs-compat/getrandom.git", package = "getrandom", branch = "0.1" }
embedded-io = { git = "https://github.com/ivmarkov/embedded-io" }

[profile.release]
opt-level = "s"

[profile.dev]
debug = true # Symbols are nice and they don't increase the size on Flash
opt-level = "z"

[features]
default = ["experimental"]

# Enable this feature for the build to use the PlatformIO tooling instead of the native ESP-IDF tooling under the hood
pio = ["esp-idf-sys/pio"]

# Enable this feature if you are building for QEMU
qemu = []

experimental = ["esp-idf-svc/experimental", "embedded-svc/experimental"]

[dependencies]
anyhow = {version = "1", features = ["backtrace"]}
log = "0.4"
# url = "2" #TODO: wozu
esp-idf-sys = { version = "0.31.11", features = ["binstart"] }
esp-idf-svc = "0.43.1"
esp-idf-hal = "0.39"
embedded-svc = "0.23"
embedded-hal = "0.2"
# smol = "1.2"
toml-cfg = "0.1.3"

#(de-)serialisierung
serde = { version = "1.0.147", features = ["derive"] }
postcard = { version = "1.0.2", features = ["use-std"] }
serde_json = "1.0.89"
# once_cell = "1.16.0"


[build-dependencies]
embuild = { version = "0.30.4", features = ["elf"] }
anyhow = "1"

# Future; might be possible once https://github.com/rust-lang/cargo/issues/9096 hits Cargo nightly:
#rust-esp32-ulp-blink = { git = "https://github.com/ivmarkov/rust-esp32-ulp-blink", artifact = "bin" }

[package.metadata.espflash]
partition_table = "partitions.csv"
